name: CI CD Pipeline

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: runner-stemdo-labs

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up script permissions
        run: |
          chmod +x ./extract_version.sh
          chmod +x ./upload_version.sh

      - name: Extract and increment version
        run: |
          NEW_VERSION=$(./extract_version.sh)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Upload version into file
        run: |
          ./upload_version.sh "$NEW_VERSION"

      # - name: Imprimir la versión extraída
      #   id: show_version
      #   run: echo "La versión es: ${{ steps.extract_version.outputs.version }}"

      # - name: Build and Push Docker Image
      #   uses: ./.github/actions/CI
      #   with:
      #     acr_name: ${{ secrets.ACR_NAME }}
      #     image_name: "myapp-frontend"
      #     image_tag: "4.0.0"
      #     arm_client_id: ${{ secrets.ARM_CLIENT_ID }}
      #     arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
      #     arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}

      - name: Upload an image 
        uses: ./.github/actions/CD
        with:
          acr_name: ${{ secrets.ACR_NAME }}
          image_name: "myapp-frontend"
          image_tag: "${{ env.NEW_VERSION }}"
          arm_client_id: ${{ secrets.ARM_CLIENT_ID }}
          arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
          arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}
          aks_resource_group: ${{ secrets.RESOURCE_GROUP_NAME }}
          aks_cluster_name: ${{ secrets.AKS_NAME }}
          acr_secret_name: ${{ secrets.ACR_SECRET_NAME }}
          chart_name: "frontend"
          harbor_username: ${{ secrets.HARBOR_USER }}
          harbor_password: ${{ secrets.HARBOR_PASS }}
          harbor_ip: ${{ secrets.HARBOR_IP }}
