name: 'Deploy to AKS with Helm'
description: 'Deploys an app to AKS using Helm'
inputs:
  acr_name:
    description: 'Azure Container Registry name'
    required: true
    type: string
  image_name:
    description: 'Name of the Docker image'
    required: true
    type: string
  image_tag:
    description: 'Tag for the Docker image'
    required: true
    type: string
  arm_client_id:
    description: 'Azure Client ID'
    required: true
    type: string
  arm_client_secret:
    description: 'Azure Client Secret'
    required: true
    type: string
  arm_tenant_id:
    description: 'Azure Tenant ID'
    required: true
    type: string
  arm_subscription_id:
    description: 'Azure Subscription ID'
    required: true
    type: string
  aks_resource_group:
    description: 'Azure Resource Group of AKS'
    required: true
    type: string
  aks_cluster_name:
    description: 'Azure AKS Cluster Name'
    required: true
    type: string
  helm_chart_path:
    description: 'Path to Helm chart directory'
    required: true
    type: string
  acr_secret_name:
    description: 'Kubernetes secret for ACR'
    required: true
    type: string
  harbor_ip:
    description: 'URL of the Harbor registry to download Helm'
    required: true
    type: string
  harbor_username:
    description: 'Username for Harbor'
    required: true
    type: string
  harbor_password:
    description: 'Password for Harbor'
    required: true
    type: string
  chart_name:
    description: 'Password for Harbor'
    required: true
    type: string

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Azure with Service Principal
      run: |
        az login --service-principal \
          -u ${{ inputs.arm_client_id }} \
          -p ${{ inputs.arm_client_secret }} \
          --tenant ${{ inputs.arm_tenant_id }}
      shell: bash

    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ inputs.aks_resource_group }} --name ${{ inputs.aks_cluster_name }}
      shell: bash
    - name: Helm Login
      run: |
        helm registry login ${{ inputs.harbor_ip }} --username ${{ inputs.harbor_username }} --password ${{ inputs.harbor_password }}
      shell: bash

    - name: Deploy with Helm
      run: |
        helm upgrade --install ${{inputs.chart_name}} oci://${{inputs.harbor_ip}}/${{inputs.harbor_username}}/${{inputs.chart_name}} \
          --namespace default \
      shell: bash

      # --set "image.repository=${{ inputs.acr_name }}.azurecr.io/${{ inputs.image_name }}" \
      #     --set "image.tag=${{ inputs.image_tag }}" \
      #     --set "image.pullSecret=${{ inputs.acr_secret_name }}"
